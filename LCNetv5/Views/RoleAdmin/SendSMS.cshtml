@model List<LCNetv5.Models.Client>  

<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <title>Bootstrap Mulitselect - Constrained Width - jsFiddle demo</title>


    <script type="text/javascript" src="//code.jquery.com/jquery-1.9.1.js"></script>
    <style type="text/css"></style>




    <link rel="stylesheet" type="text/css" href="/css/result-light.css">


    <link rel="stylesheet" type="text/css" href="//maxcdn.bootstrapcdn.com/bootstrap/3.3.1/css/bootstrap.min.css">



    <script type="text/javascript" src="//maxcdn.bootstrapcdn.com/bootstrap/3.3.1/js/bootstrap.min.js"></script>



    <link rel="stylesheet" type="text/css" href="http://davidstutz.github.io/bootstrap-multiselect/dist/css/bootstrap-multiselect.css">



    <script type="text/javascript" src="http://davidstutz.github.io/bootstrap-multiselect/dist/js/bootstrap-multiselect.js"></script>


    <style type="text/css">
        .mid-width .multiselect-container {
            width: 200px;
        }

        .mid-width.wrapItems .multiselect-container > li > a {
            white-space: normal;
        }
    </style>




    <script type="text/javascript">
        //<![CDATA[
        $(window).load(function () {
            $('.multiselect').multiselect({
                enableCaseInsensitiveFiltering: true,
                maxHeight: 200,
            });

        });//]]>

    </script>

</head>
<body>
<div>
    <form id="SendSMS" method="post" >

        <div class="form-horizontal">
            <h4>Send an SMS Message</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })


            <div class="form-group form-inline">

                <div class="control-label col-md-2">
                    
                    Phone Number
                </div>
                
                <div class="col-md-10">
                    <div>
                        <select class="multiselect" multiple="multiple" name="Numbers" style="display: none;">
                            @foreach (var client in Model)
                            {
                                <option value="@client.PhoneNumber">@client.getFullName()</option>

                            }
                        </select>
                    </div>
                </div>
            </div>
            <div class="form-group">

                <div class="control-label col-md-2">

                  Message 
                </div>

                <div class="col-md-10">
                    <div>
                        <textarea class="form-control text-box multi-line valid" id="Narrative" name="Message"></textarea>
                    </div>
                </div>
            </div>
            <div class="form-group">

                <div class="control-label col-md-2">

                    Send to All?
                </div>

                <div class="col-md-10">
                    <div>
                        <input type="checkbox" name="SendToAll">
                    </div>
                </div>
            </div>




            @*<select id="Thing" name="Numbers" multiple="multiple">
                    @foreach (var client in Model)
                    {
                        <option value="@client.PhoneNumber">@client.getFullName()</option>

                    }
                </select>*@

            


           


        </div>

    </form>  
    <div id="formsubmit" class="field">
        <button type="submit">Send</button>
    </div>

    <div class="alert alert-success" role="alert" id="GreatPost">
        Sucessfully Sent Messages
    </div>

</div>
</body>




</html>

<script type="text/javascript">

   

    $(document).ready(function () {

    $('#GreatPost').hide();
    // process the form
    $('#formsubmit').click(function(event) {
       
        var form = $('#SendSMS');


        var postdata = JSON.stringify(
        {
            "From": "Hello"
    });
        //console.log(form);
        // get the form data
        // there are many ways to get this data using jQuery (you can use the class or id also)
        var formData = $(form).serialize();

        console.log(formData);  
        // process the form
        $.ajax({
            type: 'POST', // define the type of HTTP verb we want to use (POST for our form)
            url: "/RoleAdmin/ReceiveSMS", // the url where we want to POST
            data: $('form').serialize(), // our data object
            dataType: 'json', // what type of data do we expect back from the server
            complete: function(data) {
                var stuff = JSON.stringify(data);
                $("#formsubmit").hide();
                $('#GreatPost').fadeIn("slow");
            }
        });

        
       
        event.preventDefault();
    });

});
</script>
