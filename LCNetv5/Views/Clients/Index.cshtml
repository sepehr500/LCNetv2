@using LCNetv5.Classes
@model IEnumerable<LCNetv5.Models.Client>

@{
    ViewBag.Title = "Index";
}
<style>
    .hiddenRow {
    padding: 0 !important;
}

</style>

<h2>Index</h2>

<div id="client-list">
    <p>
        @Html.ActionLink("Create New", "Create")
        <input class="search" placeholder="Search" />
        <button class="sort" data-sort="name">
            Sort by name
        </button>
        <button class="sort" data-sort="status">
            Sort by status
         </button>
        <button class="sort" data-sort="score">
            Sort by score
        </button>
        <button class="sort" data-sort="CCenter">
            Sort by center
        </button>
    </p>
    <table class="table">
        <tr>
            <th>
                Name
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>
                Credit Score
            </th>
            <th>Center</th>
            <th></th>
        </tr>

        <tbody class="list">
            @{
                int i = 0;
            }
            @foreach (var item in Model)
            {




                <tr>
                    <td data-toggle="collapse" data-target="#demo_@i" class="accordion-toggle name"  onclick='document.getElementById("ProgFrame_@i").src="/Programs/Index/@item.Id";'>
                        @item.getFullName()
                        @if (item.BirthDay != null && item.BirthDay.Value.Month == DateTime.Now.Month)
                        {
                            <i class="glyphicon glyphicon-gift"></i>
                        }
                    </td>
                    <td class="status">
                        @Html.DisplayFor(modelItem => item.Status)
                    </td>
                    <td class="score">
                        @item.getCScore()
                    </td>
                    <td class="CCenter">
                        @item.Center.
                    </td>
                    <td>

                        @Html.ActionLink("Prog", "Index", "Programs", new { id = item.Id }, null) |
                        @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                        @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.Id })|
                        @Html.ActionLink("L.L", "IndPayment", "Payments", new { id = item.getRecentLoan() }, null)|
                    </td>

                </tr>

                <tr>
                    <td class="name" style="display:none">
                        @item.getFullName() .
                    </td>
                    <td class="status" style="display:none">
                        @Html.DisplayFor(modelItem => item.Status)
                    </td>
                    <td class="score" style="display:none">
                        @item.getCScore()
                    </td>
                    <td class="CCenter" style="display:none">
                        @item.Center.
                    </td>
                    @*<td colspan="12" class="hiddenRow">
                        <div class="accordian-body collapse" id="demo_@i">
                            <iframe id="ProgFrame_@i" class="ProgramFrame"  width="100%" style="height: 50em;"></iframe>
                        </div>
                    </td>*@
                </tr>

                
                i++;
               


            }
        </tbody>

    </table>
</div>
<script src="http://listjs.com/no-cdn/list.js"></script>
<script src="http://listjs.com/no-cdn/list.fuzzysearch.js"></script>
<script>
    //Remove the navbar
    $(".ProgramFrame").load(function() {
        $(".ProgramFrame").contents().find(".navbar").hide();
    });
    //set up list searching
    var monkeyList = new List('client-list', {
        valueNames: ['name', 'status', 'score','CCenter'],
        plugins: [ListFuzzySearch()]
    });
</script>


